name: Build XMRig ARM by Sats

on:
  workflow_dispatch:

jobs:
  build-arm:
    name: Build for ARM
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [armv7, arm64]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build in Docker (Cross compile)
        run: |
          mkdir -p build-${{ matrix.arch }}
          docker run --rm -v ${{ github.workspace }}:/xmrig -w /xmrig multiarch/crossbuild \
          /bin/bash -c "\
            apt update && \
            apt install -y cmake build-essential libuv1-dev libssl-dev libhwloc-dev && \
            mkdir -p build && \
            cd build && \
            cmake .. -DCMAKE_BUILD_TYPE=Release && \
            make -j$(nproc) && \
            cp xmrig /xmrig/build-${{ matrix.arch }}/xmrig-${{ matrix.arch }}"

      - name: Zip Output
        run: |
          cd build-${{ matrix.arch }}
          zip ../xmrig-${{ matrix.arch }}.zip xmrig-${{ matrix.arch }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: xmrig-${{ matrix.arch }}.zip
          tag_name: custom-release
          replace: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
